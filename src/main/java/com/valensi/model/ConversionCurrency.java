/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.valensi.model;

import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import org.springframework.web.client.RestTemplate;

/**
 *
 * @author user
 */
public class ConversionCurrency extends javax.swing.JFrame {

    Currency sourceCurrency;
    Currency targetCurrency;
    private Map<String, Double> rates ;
    LatestConversion xRates;
    /**
     * Creates new form ConversionCurrency
     */
    public ConversionCurrency() {
        rates = new HashMap<>();
        getComboboxData();
        setExchangeFromWebServices();
        initComponents();
    }
    
    private DefaultComboBoxModel getComboboxData(){
    List<Currency> curList = toList();
    return new DefaultComboBoxModel(curList.toArray());
    }

    private List<Currency> toList(){
    List<Currency> curList = new ArrayList<>();
        Map<String, String> curMap = getCurrencyFromWebServices();
       Set<String> keys = curMap.keySet();
        for (String key : keys) {
            curList.add(new Currency(key, curMap.get(key)));
        }
        return curList;
    }
    
    private Map<String, String> getCurrencyFromWebServices() {
        RestTemplate restTemplate = new RestTemplate();
        Map<String, String> curMap
                = restTemplate.getForObject("https://openexchangerates.org/api/currencies.json", Map.class);
        return curMap;
    }
    
     private void setExchangeFromWebServices() {
        RestTemplate restTemplate = new RestTemplate();
        this.xRates = restTemplate.getForObject("https://openexchangerates.org/api/latest.json?app_id=31de5d956d1146f798d3b0bbf1890c67", LatestConversion.class);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnConvert = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbFrom = new javax.swing.JComboBox<>();
        cbTo = new javax.swing.JComboBox<>();
        txtFromCurrency = new javax.swing.JTextField();
        txtToCurrency = new javax.swing.JTextField();
        timeLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnConvert.setText("Convert");
        btnConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Conversion Currency"));

        jLabel1.setText("From Currency");

        jLabel2.setText("To Currency");

        cbFrom.setModel(getComboboxData());
        cbFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFromActionPerformed(evt);
            }
        });

        cbTo.setModel(getComboboxData());
        cbTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbToActionPerformed(evt);
            }
        });

        txtToCurrency.setEnabled(false);

        timeLabel.setText("Conversion Time");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbFrom, 0, 270, Short.MAX_VALUE)
                            .addComponent(cbTo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFromCurrency, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                            .addComponent(txtToCurrency))
                        .addGap(14, 14, 14))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(timeLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(timeLabel)
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFromCurrency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtToCurrency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnConvert)
                .addGap(40, 40, 40))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(btnConvert)
                .addGap(43, 43, 43))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFromActionPerformed
        JComboBox fromcb = (JComboBox) evt.getSource();
        sourceCurrency = (Currency) fromcb.getSelectedItem();
        System.out.println("Target Currency: "+sourceCurrency);
    }//GEN-LAST:event_cbFromActionPerformed

    private void cbToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbToActionPerformed
        JComboBox tocb = (JComboBox) evt.getSource();
        targetCurrency = (Currency) tocb.getSelectedItem();
        System.out.println("Target Currency: "+targetCurrency);
  
    }//GEN-LAST:event_cbToActionPerformed

    private void btnConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertActionPerformed

        //INI CARA BAPAKNYA 2
        if(xRates == null){
        String url ="https://openexchangerates.org/api/latest.json?app_id=31de5d956d1146f798d3b0bbf1890c67";
        RestTemplate restemplate = new RestTemplate();
        xRates = restemplate.getForObject(url, LatestConversion.class);
        }
        double fromValue = Double.parseDouble(txtFromCurrency.getText());
        double toValue = xRates.getConversion(fromValue, sourceCurrency.getCode(), targetCurrency.getCode());
        txtToCurrency.setText(String.valueOf(toValue));
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd MMMM yyyy HH:mm:ss");
        String dateString = sdf.format(xRates.getLatestDate());
        timeLabel.setText("Waktu Konversi: "+dateString);
        
        
        //INI CARA BAPAKNYA 1
//        // LOGIC INI BISA DIJADIKAN METHOD
//        Double sourceValue = Double.parseDouble(txtFromCurrency.getText());
//        Double sourceRate = xRates.getRates().get(sourceCurrency.getCode()); // NILAI SOURCE PER 1 USD
//        Double targetRate = xRates.getRates().get(targetCurrency.getCode()); // NILAI TARGET PER 1 USD
//        Double baseValue = sourceValue / sourceRate;  // NILAI UANG YANG DIINPUT DALAM USD
//        Double targetValue = baseValue * targetRate; // USD KITA KONVERSI KE MATA UANG TARGET. SELESAI
//        
//        // AGAR TAMPILAN LEBIH BAGUS
//        DecimalFormat dnf = (DecimalFormat) NumberFormat.getCurrencyInstance();
//        dnf.applyPattern("###,###.##");
//        String formattedValue = dnf.format(targetValue);
//        txtToCurrency.setText(formattedValue);
    }//GEN-LAST:event_btnConvertActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConversionCurrency.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConversionCurrency.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConversionCurrency.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConversionCurrency.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConversionCurrency().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConvert;
    private javax.swing.JComboBox<String> cbFrom;
    private javax.swing.JComboBox<String> cbTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JTextField txtFromCurrency;
    private javax.swing.JTextField txtToCurrency;
    // End of variables declaration//GEN-END:variables
}
